{"ast":null,"code":"import { trigger, transition, style, animate } from '@angular/animations';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\n\nfunction JudgeComponent_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵlistener(\"click\", function JudgeComponent_div_1_div_1_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const card_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return ctx_r4.guessCard(card_r3);\n    });\n    i0.ɵɵelement(1, \"img\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const card_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@enterAnimation\", undefined)(\"ngClass\", ctx_r2.getClass(card_r3));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", card_r3.src, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction JudgeComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, JudgeComponent_div_1_div_1_Template, 2, 3, \"div\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const keyValue_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", keyValue_r1.value);\n  }\n}\n\nexport let JudgeComponent = /*#__PURE__*/(() => {\n  class JudgeComponent {\n    constructor() {\n      this._allCards = [];\n      this._guessed = new Map();\n      this.groupedByRank = new Map();\n      this.cardsToGuess = [];\n    }\n\n    set allCards(value) {\n      this._allCards = value;\n      this._guessed = new Map(this._allCards.map(c => [c, undefined]));\n      this.groupedByRank = this.groupByRank(this._allCards);\n    }\n\n    ngOnInit() {}\n\n    groupByRank(cards) {\n      var _a;\n\n      let grouped = new Map();\n\n      for (let card of cards) {\n        if (grouped.has(card.rank)) {\n          (_a = grouped.get(card.rank)) === null || _a === void 0 ? void 0 : _a.push(card);\n          continue;\n        }\n\n        grouped.set(card.rank, [card]);\n      }\n\n      let sorted = this.sortGrouped([...grouped.entries()]);\n      return new Map(sorted);\n    }\n\n    sortGrouped(entries) {\n      for (let entry of entries) {\n        entry[1] = entry[1].sort((c1, c2) => c2.numberedSuit - c1.numberedSuit);\n      }\n\n      return entries.sort((entry1, entry2) => {\n        let card1 = entry1[1][0];\n        let card2 = entry2[1][0];\n        return card1.numberedRank - card2.numberedRank;\n      });\n    }\n\n    asIsOrder(a, b) {\n      return 1;\n    }\n\n    guessCard(card) {\n      this._guessed.set(card, !!this.cardsToGuess.find(c => c == card));\n\n      if ([...this._guessed.values()].find(s => s === false) !== undefined) {\n        alert(\"You failed!\");\n        return;\n      }\n\n      for (let card of this.cardsToGuess) {\n        let result = this._guessed.get(card);\n\n        if (result === undefined) {\n          return;\n        }\n      }\n\n      alert(\"Congratulations, you won!\");\n    }\n\n    cardStatus(card) {\n      return this._guessed.get(card);\n    }\n\n    getClass(card) {\n      const status = this.cardStatus(card);\n\n      if (status === undefined) {\n        return '';\n      }\n\n      if (status === true) {\n        return 'right';\n      }\n\n      return 'wrong';\n    }\n\n  }\n\n  JudgeComponent.ɵfac = function JudgeComponent_Factory(t) {\n    return new (t || JudgeComponent)();\n  };\n\n  JudgeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: JudgeComponent,\n    selectors: [[\"app-judge\"]],\n    inputs: {\n      allCards: \"allCards\",\n      cardsToGuess: \"cardsToGuess\"\n    },\n    decls: 3,\n    vars: 4,\n    consts: [[1, \"row\", \"justify-content-center\"], [\"class\", \"row\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\"], [\"class\", \"col card clickable\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"col\", \"card\", \"clickable\", 3, \"ngClass\", \"click\"], [1, \"card-img\", 3, \"src\"]],\n    template: function JudgeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, JudgeComponent_div_1_Template, 2, 1, \"div\", 1);\n        i0.ɵɵpipe(2, \"keyvalue\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(2, 1, ctx.groupedByRank, ctx.asIsOrder));\n      }\n    },\n    directives: [i1.NgForOf, i1.NgClass],\n    pipes: [i1.KeyValuePipe],\n    styles: [\".right[_ngcontent-%COMP%]{background:green}.wrong[_ngcontent-%COMP%]{background:red}\"],\n    data: {\n      animation: [trigger('enterAnimation', [transition(':enter', [style({\n        transform: 'translateX(100%)',\n        opacity: 0\n      }), animate('500ms', style({\n        transform: 'translateX(0)',\n        opacity: 1\n      }))]), transition(':leave', [style({\n        transform: 'translateX(0)',\n        opacity: 1\n      }), animate('500ms', style({\n        transform: 'translateX(-100%)',\n        opacity: 0\n      }))])])]\n    }\n  });\n  return JudgeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}